{"version":3,"sources":["trigger.js"],"names":["define","langx","eventer","createEvent","trigger","evented","type","args","e","Event","_args","fn","dispatchEvent","call","console","warn","this"],"mappings":";;;;;;;AAAAA,QACC,gBACA,YACG,YACF,SAASC,EAAMC,EAAQC,GA8BrB,OAAOD,EAAQE,QAtBf,SAAiBC,EAASC,EAAMC,GAC5B,IAAIC,GAEAA,EADAF,aAAgBG,MACZH,EAEAH,EAAYG,EAAMC,IAExBG,MAAQH,EAEV,IAAII,EAAMN,EAAQO,eAAiBP,EAAQD,QAO3C,OANIO,EACAA,EAAGE,KAAKR,EAASG,GAEjBM,QAAQC,KAAK,mDAGVC","file":"../trigger.js","sourcesContent":["define([\r\n\t\"skylark-langx\",\r\n\t\"./eventer\",\r\n    \"./create\"\r\n],function(langx,eventer,createEvent){\r\n\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n\r\n    return eventer.trigger = trigger;\r\n});"]}