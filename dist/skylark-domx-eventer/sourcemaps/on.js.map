{"version":3,"sources":["on.js"],"names":["define","langx","eventer","findHandler","isHandler","on","elm","events","selector","data","callback","ctx","one","isPlainObject","each","type","fn","this","isString","undefined","isBoolean","returnFalse","indexOf","split","handler","forEach","event","ready","register"],"mappings":";;;;;;;AAAAA,QACI,gBACA,YACA,iBACA,gBACF,SAASC,EAAMC,EAAQC,EAAYC,GAwEjC,OAAOF,EAAQG,GA3Df,SAASA,EAAGC,EAAKC,EAAQC,EAAUC,EAAMC,EAAUC,EAAIC,GAGnD,GAAIX,EAAMY,cAAcN,GAIpB,OAHAN,EAAMa,KAAKP,EAAQ,SAASQ,EAAMC,GAC9BX,EAAGC,EAAKS,EAAMP,EAAUC,EAAMO,EAAIJ,KAE/BK,KAGNhB,EAAMiB,SAASV,IAAcJ,EAAUM,KACxCE,EAAMD,EACNA,EAAMD,EACNA,EAAWD,EACXA,EAAOD,EACPA,OAAWW,GAGXf,EAAUK,KACVG,EAAMD,EACNA,EAAMD,EACNA,EAAWD,EACXA,OAAOU,GAGPlB,EAAMmB,UAAUT,KAChBC,EAAMD,EACNA,OAAMQ,IAEO,IAAbT,IACAA,EAAWT,EAAMoB,aAGA,iBAAVd,IAEHA,EADAA,EAAOe,QAAQ,MAAQ,EACdf,EAAOgB,MAAM,KAEbhB,EAAOgB,MAAM,OAI9B,IAAIC,EAAUrB,EAAYG,GAa1B,OAXAC,EAAOkB,QAAQ,SAASC,GACpB,GAAa,SAATA,EACA,OAAOC,MAAMjB,GAEjBc,EAAQI,SAASF,EAAOhB,GACpBD,KAAMA,EACND,SAAUA,EACVG,IAAMA,EACNC,MAAOA,MAGRK","file":"../on.js","sourcesContent":["define([\r\n    \"skylark-langx\",\r\n    \"./eventer\",\r\n    \"./find-handler\",\r\n    \"./is-handler\"\r\n],function(langx,eventer,findHandler,isHandler){\r\n\r\n\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {Stringã€€Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Booleanã€€Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, ctx,one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !isHandler(callback)) {\r\n            one = ctx;\r\n            ctx = callback;\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (isHandler(data)) {\r\n            one = ctx;\r\n            ctx = callback;\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (langx.isBoolean(ctx)) {\r\n            one = ctx;\r\n            ctx = undefined;\r\n        }\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                ctx : ctx,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    return eventer.on = on;\r\n});"]}