{"version":3,"sources":["main.js"],"names":["define","langx","velm","$","eventer","each","NativeEvents","name","elm","selector","data","callback","arguments","length","on","focus","blur","click","trigger","this","delegateMethodNames","push","delegate","i","fn","wraps","wrapper_every_act","ready"],"mappings":";;;;;;;AAAAA,QACI,gBACA,oBACA,qBACA,YACA,UACA,eACA,mBACA,mBACA,iBACA,YACA,oBACA,SACA,uBACA,kBACA,QACA,OACA,QACA,UACA,UACA,YACA,cACA,YACA,SACA,aACF,SAASC,EAAMC,EAAKC,EAAEC,GAGpBH,EAAMI,KAAKD,EAAQE,aAAa,SAASC,GACrCH,EAAQG,GAAQ,SAASC,EAAIC,EAASC,EAAKC,GACvC,OAAIC,UAAUC,OAAO,EACVT,EAAQU,GAAGN,EAAID,EAAKE,EAASC,EAAKC,IAE7B,SAARJ,EACIC,EAAIO,OACJP,EAAIO,QAEO,QAARR,EACHC,EAAIQ,MACJR,EAAIQ,OAEO,SAART,EACHC,EAAIS,OACJT,EAAIS,QAGRb,EAAQc,QAAQV,EAAID,GAGjBY,SAMnB,IAAIC,GACA,MACA,KACA,MACA,WA8CJ,OA3CAnB,EAAMI,KAAKD,EAAQE,aAAa,SAASC,GACrCa,EAAoBC,KAAKd,KAI7BL,EAAKoB,SAASF,EAAqBhB,GAEnCH,EAAMI,KAAKe,EAAoB,SAASG,EAAEhB,GACtCJ,EAAEqB,GAAGjB,GAAQJ,EAAEsB,MAAMC,kBAAkBtB,EAAQG,GAAMH,KAiCzDD,EAAEwB,MAAQvB,EAAQuB,MAEXvB","file":"../main.js","sourcesContent":["define([\r\n    \"skylark-langx\",\r\n    \"skylark-domx-velm\",\r\n    \"skylark-domx-query\",\r\n    \"./eventer\",\r\n    \"./clear\",\r\n    \"./compatible\",\r\n    \"./event-bindings\",\r\n    \"./events-handler\",\r\n    \"./find-handler\",\r\n    \"./focused\",\r\n    \"./is-native-event\",\r\n    \"./keys\",\r\n    \"./native-event-ctors\",\r\n    \"./native-events\",\r\n    \"./off\",\r\n    \"./on\",\r\n    \"./one\",\r\n    \"./proxy\",\r\n    \"./ready\",\r\n    \"./resized\",    \r\n    \"./shortcuts\",\r\n    \"./special\",\r\n    \"./stop\",\r\n    \"./trigger\"\r\n],function(langx,velm,$,eventer){\r\n\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        eventer[name] = function(elm,selector,data,callback) {\r\n            if (arguments.length>1) {\r\n                return eventer.on(elm,name,selector,data,callback);\r\n            } else {\r\n                if (name == \"focus\") {\r\n                    if (elm.focus) {\r\n                        elm.focus();\r\n                    }\r\n                } else if (name == \"blur\") {\r\n                    if (elm.blur) {\r\n                        elm.blur();\r\n                    }\r\n                } else if (name == \"click\") {\r\n                    if (elm.click) {\r\n                        elm.click();\r\n                    }\r\n                } else {\r\n                    eventer.trigger(elm,name);\r\n                }\r\n\r\n                return this;\r\n            }\r\n        };\r\n    });\r\n\r\n\r\n    var delegateMethodNames = [\r\n        \"off\",\r\n        \"on\",\r\n        \"one\",\r\n        \"trigger\"\r\n    ];\r\n\r\n    langx.each(eventer.NativeEvents,function(name){\r\n        delegateMethodNames.push(name);\r\n    });\r\n\r\n    // from ./eventer\r\n    velm.delegate(delegateMethodNames, eventer);\r\n\r\n    langx.each(delegateMethodNames,function(i,name){\r\n        $.fn[name] = $.wraps.wrapper_every_act(eventer[name],eventer);\r\n    });\r\n\r\n\r\n    /*\r\n    $.fn.on = $.wraps.wrapper_every_act(eventer.on, eventer);\r\n\r\n    $.fn.off = $.wraps.wrapper_every_act(eventer.off, eventer);\r\n\r\n    $.fn.trigger = $.wraps.wrapper_every_act(eventer.trigger, eventer);\r\n\r\n    ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n        'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n        $.fn[event] = $.wraps.wrapper_every_act(eventer[event],eventer);\r\n    });\r\n\r\n    $.fn.one = function(event, selector, data, callback) {\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = null;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = null;\r\n        }\r\n\r\n        return this.on(event, selector, data, callback, 1)\r\n    }; \r\n    */\r\n\r\n    $.ready = eventer.ready;\r\n\r\n    return eventer;\r\n});"]}